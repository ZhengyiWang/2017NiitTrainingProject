------------------- 特别注意事项 --------------
1. SQL语句的表名和列名要区分大小写！（考虑到以后发布时有可能是在Linux环境下）。如：adminId不要写成adminiD
2. 所有后台请求的url（包括JSP和Action），都必须添加到拥有其访问权限的角色菜单表里，否则会被拦截器拦截！
   （如果easyUI操作某个功能没反应，说明没权限访问，很可能是没有将menu添加到rolemenu里！！！）
      强烈建议完成一个功能请求就把对应的menu添加到/sql/menu.sql中，该文件记录了各模块的请求路径和权限，
      再把数据新增到数据库，并绑定rolemenu。   
3. ID为32位，调用GenericUtil.getUUID()方法生成
4. jsp的js代码最好单独放在一个js文件，在jsp里初始化参数 basePath和adminPath或studentPath
5. 删除学院或专业时，旗下的管理员也要删除！
6. 充分考虑到各角色拥有的不同权限可能带来的越级问题，操作前多加判断
7. 所有JSP页面的table的id="qd" 全部要不一样，否则选项卡的数据会变一样


------------------- 基本要求 ------------------

1. 注意编码规范(命名,注释,配置文件...)
2. 防止重复提交表单
3. 所有的文件统一编码为UTF-8
4. 编程环境: MyEclipse , Mysql 5.7 , JDK7 , tomcat7 
6. 类必须有作者名字
7. 每个人务必把自己负责的模块的Java代码放在相应的包下,JSP页面则放在WebRoot/admin/xx文件下

java:
1. 基包名：cn.qdu.xsgz
2. 采用三层模式开发：
    表示层 ： struts2的Action
    业务逻辑层：Service(在此处进行逻辑处理和开启事务)
    持久化层 ： DAO(在此处进行数据库操作)
3. 对于通用的工具类，独立出来放到util包下

维护：
1. 异常处理： 在有可能抛异常的地方，将异常输出到日志文件中，便于查错(待办)
2. 考虑将重要操作记录保存到数据库中（待办）
3. 测试类放到test包下  
